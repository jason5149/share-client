.size(@width: auto, @height: auto) {
  width: @width;
  height: @height;
}

.px2rem(@name, @px) {
  @{name}: @px / @baseFontSize * 1rem;
}

.boxSizing(@type: border-box) {
  -webkit-box-sizing: @type;
     -moz-box-sizing: @type;
          box-sizing: @type;
}

.borderRadius(@radius) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}

.position(@type, @top: null, @right: null, @bottom: null, @left: null) {
  position: @type;
  & when not (@top = null) {
    top: @top;
  }
  & when not (@right = null) {
    right: @right;
  }
  & when not (@bottom = null) {
    bottom: @bottom;
  }
  & when not (@left = null) {
    left: @left;
  }
}

.textOverflow(@width, @isMulti: false, @lines: 2) {
  width: @width;
  overflow: hidden;
  & when (@isMulti = true) {
    display: -webkit-box;
    -webkit-line-clamp: @lines;
    -webkit-box-orient: vertical;
  }
  & when (@isMulti = false) {
    white-space: nowrap;
    text-overflow: ellipsis;
  }
}

.bgSrc(@path: '', @width: 100%, @height: 100%, @pWidth: center, @pHeight: center, @repeat: no-repeat) {
  background-size: @width @height;
  background-repeat: @repeat;
  background-position: @pWidth @pHeight;
  & when (@path = '') {
    background-image: '';
  }
  & when not (@path = '') {
    background-image: url(@path);
  }
}

.bgGradient(@deg, @color1, @color2) {
  background: -webkit-linear-gradient(@deg, @color1, @color2);
  background:    -moz-linear-gradient(@deg, @color1, @color2);
  background:      -o-linear-gradient(@deg, @color1, @color2);
  background:         linear-gradient(@deg, @color1, @color2);
}

.placeholder(@color) {
  ::-webkit-input-placeholder {
    color: @color;
  }
  ::-ms-input-placeholder {
    color: @color;
  }
  ::-moz-placeholder {
    color: @color;
  }
}

.generateColumns(@n, @i: 1) when (@i =< @n) {
  .column-@{i} {
    width: (@i * 100% / @n);
    display: inline-block;
  }
  .generateColumns(@n, (@i + 1));
}

.transition(@prop: all, @type: linear, @duration: .3s) {
  -webkit-transition: @prop @type @duration;
     -moz-transition: @prop @type @duration;
      -ms-transition: @prop @type @duration;
       -o-transition: @prop @type @duration;
          transition: @prop @type @duration;
}

.animation(@name, @duration: .3s, @type: linear, @infinite: false) {
  & when (@infinite = false) {
    -webkit-animation: @name @duration @type infinite;
       -moz-animation: @name @duration @type infinite;
        -ms-animation: @name @duration @type infinite;
         -o-animation: @name @duration @type infinite;
            animation: @name @duration @type infinite;
  }
  & when (@infinite = true) {
    -webkit-animation: @name @duration @type;
       -moz-animation: @name @duration @type;
        -ms-animation: @name @duration @type;
         -o-animation: @name @duration @type;
            animation: @name @duration @type;
  }
}

.backdropFilter(@value) {
  -webkit-backdrop-filter: blur(@value);
          backdrop-filter: blur(@value);  
}

.borderHalfPx(@borderColor: #e5e5e5, @borderRadius: 0, @borderTop: 0, @borderRight: 0, @borderBottom: 0, @borderLeft: 0, @borderStyle: solid) {
  position: relative;
  &::before {
    content: '';
    border: @borderTop @borderStyle @borderColor;
    border-right-width: @borderRight;
    border-bottom-width: @borderBottom;
    border-left-width: @borderLeft;
    transform-origin: 0 0;
    -webkit-transform-origin: 0 0;
    transform: scale(.5, .5);
    -webkit-transform: scale(.5, .5);
    .size(200%, 200%);
    .position(relative, 0, 0, 0, 0);
    .borderRadius(@borderRadius * 2);
  }
}

.borderTopHalfPx(@borderColor: #e5e5e5, @borderRadius: 0) {
  .borderHalfPx(@borderColor, @borderRadius, 1px, 0, 0, 0);
  &::before {
    height: 0;
    bottom: initial;
  }
}

.borderRightHalfPx(@borderColor: #e5e5e5, @borderRadius: 0) {
  .borderHalfPx(@borderColor, @borderRadius, 0, 1px, 0, 0);
  &::before {
    width: 0;
    bottom: initial;
  }
}

.borderBottomHalfPx(@borderColor: #e5e5e5, @borderRadius: 0) {
  .borderHalfPx(@borderColor, @borderRadius, 0, 0, 1px, 0);
  &::before {
    height: 0;
    bottom: initial;
  }
}

.borderRightHalfPx(@borderColor: #e5e5e5, @borderRadius: 0) {
  .borderHalfPx(@borderColor, @borderRadius, 0, 0, 0, 1px);
  &::before {
    width: 0;
    bottom: initial;
  }
}